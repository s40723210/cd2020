<h1>Weeks</h1>
<p><a href="https://s40723210.github.io/cd2020/content/Week1-5.html">Week1-5</a></p>
<p><a href="https://s40723210.github.io/cd2020/content/Week6-9.html">Week6-9</a></p>
<p><a href="https://s40723210.github.io/cd2020/content/Week10-14.html">Week10-14</a></p>
<p><a href="https://s40723210.github.io/cd2020/content/Week15-18.html">Week15-18</a></p>
<h2>Week1-5</h2>
<h4 class="post-title entry-title" itemprop="name"><strong>建立個人cd2020倉儲</strong></h4>
<p><span>1.下載<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a>，完成後開啟start。</span><span><br/></span><span></span><span><span>2.先登入自己的github帳號，</span><span>創建一個新的倉儲cd2020。</span></span><span><span><br/></span><span>3.進入要存放該資料的資料夾tmp。</span></span><span><span><br/></span></span><span></span><span><span>4.git clone </span><span>https://github.com/s40723210/cad2020 。</span><span><br/></span><span>5.</span><span>git submodule add https://github.com/mdecourse/cmsimde.git。</span></span><span><span><br/>6.再進入cmsimde，輸入python -m pip install flask_cors。</span></span><span><span><br/>7.完成後，python wsgi.py 開始編輯倉儲。<br/></span></span><span><span>8.login密碼為admin，gitconfig要有帳號密碼。</span></span><span><span><br/>9.處理完，git status &gt; git add . &gt; git commit -m "標題" &gt; git push。</span></span><span><span><br/>10.開啟github倉儲設定，點選要推送的branch即可。<br/></span></span></p>
<p><span>我的教學影片:<a href="https://youtu.be/jBFzju1F43s">https://youtu.be/jBFzju1F43s<br/><br/><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/jBFzju1F43s" width="560"></iframe></a></span></p>
<hr color="0000ff"/>
<h4><span>Updated Python 3.8.2</span></h4>
<p>1.從Python<a href="https://www.python.org/">官方網站</a>，下載3.8.2版本的<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2.exe">安裝檔</a>。</p>
<p>2.完成後開啟，點選<span>Customize installation(定制安裝)。</span></p>
<p>3.將第二個選項的pip取消勾選，其他都可以勾選起來。</p>
<p>4.使用預設勾選，將路徑改為y槽的py382資料夾(自己創建)。</p>
<p>5.用編輯器來開啟<span>start_mdecourse.bat檔案。</span></p>
<p>6.<span>將</span><span>檔中的py373全部都改成py382後，重新啟動。</span></p>
<p>7.直接在y槽中執行，python <span>get-pip.py 來安裝pip軟件。</span></p>
<p><span>8.完成之後，來安裝軟件包，輸入 pip install <span style="color: #ff0000;">Flask</span> 依此類推。</span></p>
<p><span>9.要</span><span>安裝有<span style="color: #ff0000;">Flask</span>、<span style="color: #ff0000;">Markdown</span>、<span style="color: #ff0000;">lxml</span>、<span style="color: #ff0000;">bs4</span>、<span style="color: #ff0000;">flask_cors</span>、<span style="color: #ff0000;">pelican</span>、<span style="color: #ff0000;">leo</span>。</span></p>
<p><span> </span></p>
<p><span></span></p><h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>